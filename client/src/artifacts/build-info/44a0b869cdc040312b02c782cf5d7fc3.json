{"id":"44a0b869cdc040312b02c782cf5d7fc3","_format":"hh-sol-build-info-1","solcVersion":"0.8.0","solcLongVersion":"0.8.0+commit.c7dfd78e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/Bank.sol":{"content":"pragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n\r\ncontract Bank{\r\n    address owner;\r\n    bytes32[] public whitelistedSymbols; //array of token symbols that allow being deposited and withdrawn from this contract\r\n    mapping(bytes32 => address) public whitelistedTokens; //address\r\n    mapping(address => mapping(bytes32=> uint256)) public balances; // address : the deposited wallet, bytes32: symbol of the token, uint256: number of that token thats been deposited\r\n\r\n\r\n    constructor(){\r\n        owner=msg.sender;\r\n    }\r\n    \r\n    function whitelistedToken(bytes32 symbol, address tokenAddress) external{\r\n        require(msg.sender == owner, \"Only Owner can use this function\");\r\n\r\n        whitelistedSymbols.push(symbol);\r\n        whitelistedTokens[symbol]= tokenAddress;\r\n    }\r\n   function getWhitelistedTokenAddress(bytes32 symbol) external view returns(address){\r\n        return whitelistedTokens[symbol];\r\n    }\r\n\r\n    receive() external payable{\r\n        balances[msg.sender]['Eth'] += msg.value;\r\n        }\r\n            \r\n    function withdrawEther(uint amount) external {\r\n        require(balances[msg.sender]['Eth'] >= amount, 'Insufficient funds');\r\n        balances[msg.sender]['Eth'] -= amount;\r\n        payable(msg.sender).call{value: amount};\r\n            }\r\n\r\n\r\nfunction depositTokens(uint256 amount, bytes32 symbol) external{\r\n    balances[msg.sender][symbol] += amount;\r\n    IERC20(whitelistedTokens[symbol]).transferFrom(msg.sender, address(this), amount);\r\n}\r\n\r\nfunction withdrawTokens(uint256 amount, bytes32 symbol) external{\r\n\r\nrequire(balances[msg.sender][symbol] >= amount, 'Insufficient funds');\r\n\r\nbalances[msg.sender][symbol] -= amount;\r\n IERC20(whitelistedTokens[symbol]).transfer( msg.sender,amount);\r\n}\r\n\r\nfunction getTokenBalance(bytes32 symbol) external view returns(uint256){\r\n    return balances[msg.sender][symbol];\r\n}\r\n\r\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Bank.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/Bank.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[77]},"id":78,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"131:70:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":77,"linearizedBaseContracts":[77],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"225:158:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":11,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":11,"src":"403:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":11,"src":"425:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":11,"src":"445:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:0"},"src":"388:72:0"},{"anonymous":false,"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"466:148:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":20,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":20,"src":"634:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":20,"src":"657:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":20,"src":"682:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:0"},"src":"619:78:0"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"703:66:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"794:2:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":26,"src":"820:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:0"},"scope":77,"src":"774:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"835:72:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":34,"src":"931:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:0"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":34,"src":"971:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:0"},"scope":77,"src":"912:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"986:202:0","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":44,"src":"1211:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":44,"src":"1223:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":44,"src":"1257:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:0"},"scope":77,"src":"1193:70:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1269:264:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":54,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":54,"src":"1557:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":54,"src":"1572:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:0"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":54,"src":"1612:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:0"},"scope":77,"src":"1538:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1627:642:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":64,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":64,"src":"2291:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":64,"src":"2308:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":64,"src":"2342:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:0"},"scope":77,"src":"2274:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2354:287:0","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":76,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":76,"src":"2677:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":76,"src":"2699:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":76,"src":"2719:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":76,"src":"2758:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":73,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:0"},"scope":77,"src":"2646:118:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":78,"src":"202:2564:0"}],"src":"106:2661:0"},"id":0},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[389]},"id":390,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":79,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"285:196:1","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":389,"linearizedBaseContracts":[389],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":111,"nodeType":"Block","src":"717:140:1","statements":[{"id":110,"nodeType":"UncheckedBlock","src":"727:124:1","statements":[{"assignments":[93],"declarations":[{"constant":false,"id":93,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":110,"src":"751:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":97,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":94,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"763:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":95,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"767:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":98,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"786:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":99,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"790:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":105,"nodeType":"IfStatement","src":"782:28:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":91,"id":104,"nodeType":"Return","src":"793:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":107,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"838:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":91,"id":109,"nodeType":"Return","src":"824:16:1"}]}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"505:131:1","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":112,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":112,"src":"657:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":112,"src":"668:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:1"},"returnParameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":112,"src":"702:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":87,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":112,"src":"708:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:1"},"scope":389,"src":"641:216:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":139,"nodeType":"Block","src":"1078:113:1","statements":[{"id":138,"nodeType":"UncheckedBlock","src":"1088:97:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":124,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"1116:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1120:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":131,"nodeType":"IfStatement","src":"1112:28:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":123,"id":130,"nodeType":"Return","src":"1123:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":133,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1168:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":134,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"1172:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":123,"id":137,"nodeType":"Return","src":"1154:20:1"}]}]},"documentation":{"id":113,"nodeType":"StructuredDocumentation","src":"863:134:1","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":140,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":115,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":140,"src":"1018:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":140,"src":"1029:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:1"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":140,"src":"1063:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":119,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":122,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":140,"src":"1069:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:1"},"scope":389,"src":"1002:189:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":181,"nodeType":"Block","src":"1415:417:1","statements":[{"id":180,"nodeType":"UncheckedBlock","src":"1425:401:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":152,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"1683:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":159,"nodeType":"IfStatement","src":"1679:28:1","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":151,"id":158,"nodeType":"Return","src":"1691:16:1"}},{"assignments":[161],"declarations":[{"constant":false,"id":161,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":180,"src":"1721:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":165,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":162,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"1733:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":163,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"1737:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":166,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"1756:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":167,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"1760:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":169,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"1765:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":175,"nodeType":"IfStatement","src":"1752:33:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":151,"id":174,"nodeType":"Return","src":"1768:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":177,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"1813:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":151,"id":179,"nodeType":"Return","src":"1799:16:1"}]}]},"documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"1197:137:1","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":182,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":182,"src":"1355:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":142,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":182,"src":"1366:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:1"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":182,"src":"1400:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":147,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":182,"src":"1406:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:1"},"scope":389,"src":"1339:493:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":209,"nodeType":"Block","src":"2057:114:1","statements":[{"id":208,"nodeType":"UncheckedBlock","src":"2067:98:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":194,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"2095:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":201,"nodeType":"IfStatement","src":"2091:29:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":193,"id":200,"nodeType":"Return","src":"2103:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":203,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"2148:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":204,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"2152:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":193,"id":207,"nodeType":"Return","src":"2134:20:1"}]}]},"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"1838:138:1","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":210,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":210,"src":"1997:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":210,"src":"2008:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":210,"src":"2042:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":210,"src":"2048:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:1"},"scope":389,"src":"1981:190:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":237,"nodeType":"Block","src":"2406:114:1","statements":[{"id":236,"nodeType":"UncheckedBlock","src":"2416:98:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":222,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"2444:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":229,"nodeType":"IfStatement","src":"2440:29:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":221,"id":228,"nodeType":"Return","src":"2452:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2497:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":232,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"2501:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":221,"id":235,"nodeType":"Return","src":"2483:20:1"}]}]},"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"2177:148:1","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":238,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nodeType":"FunctionDefinition","parameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":238,"src":"2346:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":215,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":238,"src":"2357:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:1"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":238,"src":"2391:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":217,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":238,"src":"2397:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:1"},"scope":389,"src":"2330:190:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":252,"nodeType":"Block","src":"2822:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":248,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"2839:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":249,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"2843:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":247,"id":251,"nodeType":"Return","src":"2832:12:1"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"2526:224:1","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":253,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":253,"src":"2768:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":253,"src":"2779:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:1"},"returnParameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":253,"src":"2813:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:1"},"scope":389,"src":"2755:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":267,"nodeType":"Block","src":"3189:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3206:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":264,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3210:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":262,"id":266,"nodeType":"Return","src":"3199:12:1"}]},"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"2857:260:1","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":268,"src":"3135:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":258,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":268,"src":"3146:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:1"},"returnParameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":268,"src":"3180:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:1"},"scope":389,"src":"3122:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"3532:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":278,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"3549:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":279,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"3553:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":277,"id":281,"nodeType":"Return","src":"3542:12:1"}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"3224:236:1","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":283,"src":"3478:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":283,"src":"3489:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:1"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":283,"src":"3523:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:1"},"scope":389,"src":"3465:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":297,"nodeType":"Block","src":"3917:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":293,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"3934:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":294,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3938:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":292,"id":296,"nodeType":"Return","src":"3927:12:1"}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"3567:278:1","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":298,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":298,"src":"3863:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":298,"src":"3874:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:1"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":298,"src":"3908:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:1"},"scope":389,"src":"3850:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":312,"nodeType":"Block","src":"4466:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"4483:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":309,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"4487:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":307,"id":311,"nodeType":"Return","src":"4476:12:1"}]},"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"3952:442:1","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":313,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":313,"src":"4412:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":313,"src":"4423:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":302,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:1"},"returnParameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":313,"src":"4457:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:1"},"scope":389,"src":"4399:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":337,"nodeType":"Block","src":"5084:106:1","statements":[{"id":336,"nodeType":"UncheckedBlock","src":"5094:90:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":326,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5126:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"5131:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5126:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":329,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"5134:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5118:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":331,"nodeType":"ExpressionStatement","src":"5118:29:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":332,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"5168:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":333,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5172:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":324,"id":335,"nodeType":"Return","src":"5161:12:1"}]}]},"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"4501:453:1","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":338,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":338,"src":"4981:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":338,"src":"5000:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"5000:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":338,"src":"5019:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":319,"name":"string","nodeType":"ElementaryTypeName","src":"5019:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:80:1"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":338,"src":"5075:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5074:9:1"},"scope":389,"src":"4959:231:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":362,"nodeType":"Block","src":"5799:105:1","statements":[{"id":361,"nodeType":"UncheckedBlock","src":"5809:89:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":351,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"5841:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5841:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":354,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"5848:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5833:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5833:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"ExpressionStatement","src":"5833:28:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5882:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":358,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"5886:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":349,"id":360,"nodeType":"Return","src":"5875:12:1"}]}]},"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"5196:473:1","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":363,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":363,"src":"5696:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":363,"src":"5715:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":363,"src":"5734:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":344,"name":"string","nodeType":"ElementaryTypeName","src":"5734:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5686:80:1"},"returnParameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":363,"src":"5790:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:9:1"},"scope":389,"src":"5674:230:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":387,"nodeType":"Block","src":"6675:105:1","statements":[{"id":386,"nodeType":"UncheckedBlock","src":"6685:89:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":376,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"6717:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":379,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6724:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":375,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6709:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"6709:28:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"6758:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":383,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"6762:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":374,"id":385,"nodeType":"Return","src":"6751:12:1"}]}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"5910:635:1","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":388,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":388,"src":"6572:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":388,"src":"6591:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":367,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":388,"src":"6610:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":369,"name":"string","nodeType":"ElementaryTypeName","src":"6610:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6562:80:1"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":388,"src":"6666:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"6666:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6665:9:1"},"scope":389,"src":"6550:230:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":390,"src":"482:6300:1"}],"src":"107:6676:1"},"id":1},"contracts/Bank.sol":{"ast":{"absolutePath":"contracts/Bank.sol","exportedSymbols":{"Bank":[595],"IERC20":[77],"SafeMath":[389]},"id":596,"nodeType":"SourceUnit","nodes":[{"id":391,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":392,"nodeType":"ImportDirective","scope":596,"sourceUnit":78,"src":"27:56:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":393,"nodeType":"ImportDirective","scope":596,"sourceUnit":390,"src":"85:57:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":595,"linearizedBaseContracts":[595],"name":"Bank","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":395,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":595,"src":"168:13:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"168:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"functionSelector":"4762b976","id":398,"mutability":"mutable","name":"whitelistedSymbols","nodeType":"VariableDeclaration","scope":595,"src":"188:35:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[]"},"typeName":{"baseType":{"id":396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"188:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":397,"nodeType":"ArrayTypeName","src":"188:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"public"},{"constant":false,"functionSelector":"aa3d9a15","id":402,"mutability":"mutable","name":"whitelistedTokens","nodeType":"VariableDeclaration","scope":595,"src":"315:52:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":401,"keyType":{"id":399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"323:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"315:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueType":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"334:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"1f14df69","id":408,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":595,"src":"384:62:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"},"typeName":{"id":407,"keyType":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"392:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"384:46:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"},"valueType":{"id":406,"keyType":{"id":404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"411:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"403:26:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"body":{"id":416,"nodeType":"Block","src":"586:35:2","statements":[{"expression":{"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":411,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"597:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":412,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"603:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"603:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"597:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":415,"nodeType":"ExpressionStatement","src":"597:16:2"}]},"id":417,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"584:2:2"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"586:0:2"},"scope":595,"src":"573:48:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":444,"nodeType":"Block","src":"705:177:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":425,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"724:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"724:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":427,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"738:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"724:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79204f776e65722063616e2075736520746869732066756e6374696f6e","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"745:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fbbecae12ff5e96895b346f0eb02b450c5edf5b9c13f0acc98a82d3dc427ac1","typeString":"literal_string \"Only Owner can use this function\""},"value":"Only Owner can use this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fbbecae12ff5e96895b346f0eb02b450c5edf5b9c13f0acc98a82d3dc427ac1","typeString":"literal_string \"Only Owner can use this function\""}],"id":424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"716:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"716:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"ExpressionStatement","src":"716:64:2"},{"expression":{"arguments":[{"id":435,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"817:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":432,"name":"whitelistedSymbols","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"793:18:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"793:23:2","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"793:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"ExpressionStatement","src":"793:31:2"},{"expression":{"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":438,"name":"whitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"835:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":440,"indexExpression":{"id":439,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"853:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"835:25:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":441,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"862:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"835:39:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":443,"nodeType":"ExpressionStatement","src":"835:39:2"}]},"functionSelector":"db04a9ab","id":445,"implemented":true,"kind":"function","modifiers":[],"name":"whitelistedToken","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":445,"src":"659:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"659:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"tokenAddress","nodeType":"VariableDeclaration","scope":445,"src":"675:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"658:38:2"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"705:0:2"},"scope":595,"src":"633:249:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":456,"nodeType":"Block","src":"969:51:2","statements":[{"expression":{"baseExpression":{"id":452,"name":"whitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"987:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":454,"indexExpression":{"id":453,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"1005:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"987:25:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":451,"id":455,"nodeType":"Return","src":"980:32:2"}]},"functionSelector":"e8812788","id":457,"implemented":true,"kind":"function","modifiers":[],"name":"getWhitelistedTokenAddress","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":457,"src":"923:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"923:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"922:16:2"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":457,"src":"961:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"961:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"960:9:2"},"scope":595,"src":"887:133:2","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":470,"nodeType":"Block","src":"1054:63:2","statements":[{"expression":{"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":460,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1065:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"}},"id":464,"indexExpression":{"expression":{"id":461,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1074:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1074:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1065:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":465,"indexExpression":{"hexValue":"457468","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1086:5:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c10068c4e8f0b2905447ed0a679a3934513092c8a965b7a3d1ea67ea1cd0698","typeString":"literal_string \"Eth\""},"value":"Eth"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1065:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":466,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1096:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1096:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1065:40:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":469,"nodeType":"ExpressionStatement","src":"1065:40:2"}]},"id":471,"implemented":true,"kind":"receive","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[],"src":"1035:2:2"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"1054:0:2"},"scope":595,"src":"1028:89:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":506,"nodeType":"Block","src":"1182:193:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":477,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1201:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"}},"id":480,"indexExpression":{"expression":{"id":478,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1210:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1210:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1201:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":482,"indexExpression":{"hexValue":"457468","id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1222:5:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c10068c4e8f0b2905447ed0a679a3934513092c8a965b7a3d1ea67ea1cd0698","typeString":"literal_string \"Eth\""},"value":"Eth"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1201:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":483,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"1232:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1201:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6473","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1240:20:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""},"value":"Insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""}],"id":476,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1193:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1193:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":487,"nodeType":"ExpressionStatement","src":"1193:68:2"},{"expression":{"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":488,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1272:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"}},"id":492,"indexExpression":{"expression":{"id":489,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1281:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1281:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1272:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":493,"indexExpression":{"hexValue":"457468","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1293:5:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c10068c4e8f0b2905447ed0a679a3934513092c8a965b7a3d1ea67ea1cd0698","typeString":"literal_string \"Eth\""},"value":"Eth"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1272:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":494,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"1303:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1272:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":496,"nodeType":"ExpressionStatement","src":"1272:37:2"},{"expression":{"expression":{"expression":{"arguments":[{"expression":{"id":499,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1328:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1328:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1320:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"1320:8:2","stateMutability":"payable","typeDescriptions":{}}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1320:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1320:24:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"1352:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1320:39:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":505,"nodeType":"ExpressionStatement","src":"1320:39:2"}]},"functionSelector":"3bed33ce","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawEther","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":507,"src":"1160:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint","nodeType":"ElementaryTypeName","src":"1160:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1159:13:2"},"returnParameters":{"id":475,"nodeType":"ParameterList","parameters":[],"src":"1182:0:2"},"scope":595,"src":"1137:238:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":538,"nodeType":"Block","src":"1444:137:2","statements":[{"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":514,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1451:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"}},"id":518,"indexExpression":{"expression":{"id":515,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1460:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1460:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1451:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":519,"indexExpression":{"id":517,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"1472:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1451:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":520,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"1483:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1451:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":522,"nodeType":"ExpressionStatement","src":"1451:38:2"},{"expression":{"arguments":[{"expression":{"id":529,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1543:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1543:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":533,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1563:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Bank_$595","typeString":"contract Bank"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Bank_$595","typeString":"contract Bank"}],"id":532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1555:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"1555:7:2","typeDescriptions":{}}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1555:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":535,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"1570:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":524,"name":"whitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"1503:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":526,"indexExpression":{"id":525,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"1521:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1503:25:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":523,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"1496:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1496:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":76,"src":"1496:46:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1496:81:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":537,"nodeType":"ExpressionStatement","src":"1496:81:2"}]},"functionSelector":"d15b223e","id":539,"implemented":true,"kind":"function","modifiers":[],"name":"depositTokens","nodeType":"FunctionDefinition","parameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":539,"src":"1404:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1404:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":539,"src":"1420:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1420:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1403:32:2"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[],"src":"1444:0:2"},"scope":595,"src":"1381:200:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":578,"nodeType":"Block","src":"1649:187:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":547,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1662:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"}},"id":550,"indexExpression":{"expression":{"id":548,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1671:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1671:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1662:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":552,"indexExpression":{"id":551,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"1683:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1662:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":553,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"1694:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1662:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6473","id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1702:20:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""},"value":"Insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""}],"id":546,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1654:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"ExpressionStatement","src":"1654:69:2"},{"expression":{"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":558,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1728:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"}},"id":562,"indexExpression":{"expression":{"id":559,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1737:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1737:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1728:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":563,"indexExpression":{"id":561,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"1749:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1728:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":564,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"1760:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1728:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":566,"nodeType":"ExpressionStatement","src":"1728:38:2"},{"expression":{"arguments":[{"expression":{"id":573,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1814:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1814:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"1825:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":568,"name":"whitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"1777:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":570,"indexExpression":{"id":569,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"1795:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1777:25:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":567,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"1770:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1770:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1770:42:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1770:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":577,"nodeType":"ExpressionStatement","src":"1770:62:2"}]},"functionSelector":"8f97994b","id":579,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawTokens","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":579,"src":"1609:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"1609:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":579,"src":"1625:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1625:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1608:32:2"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[],"src":"1649:0:2"},"scope":595,"src":"1585:251:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":593,"nodeType":"Block","src":"1911:46:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":586,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1925:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"}},"id":589,"indexExpression":{"expression":{"id":587,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1934:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1934:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1925:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":591,"indexExpression":{"id":590,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"1946:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1925:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":585,"id":592,"nodeType":"Return","src":"1918:35:2"}]},"functionSelector":"88db6ac6","id":594,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenBalance","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":594,"src":"1865:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1865:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1864:16:2"},"returnParameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":594,"src":"1903:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"1903:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1902:9:2"},"scope":595,"src":"1840:117:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":596,"src":"148:1814:2"}],"src":"0:1962:2"},"id":2}},"contracts":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e8fd0ae6979a6e3ada696877010759725fdbc8320829900f76947661cb990b664736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E DUP16 0xD0 0xAE PUSH10 0x79A6E3ADA69687701075 SWAP8 0x25 REVERT 0xBC DUP4 KECCAK256 DUP3 SWAP10 STOP 0xF7 PUSH10 0x47661CB990B664736F6C PUSH4 0x43000800 STOP CALLER ","sourceMap":"482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e8fd0ae6979a6e3ada696877010759725fdbc8320829900f76947661cb990b664736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E DUP16 0xD0 0xAE PUSH10 0x79A6E3ADA69687701075 SWAP8 0x25 REVERT 0xBC DUP4 KECCAK256 DUP3 SWAP10 STOP 0xF7 PUSH10 0x47661CB990B664736F6C PUSH4 0x43000800 STOP CALLER ","sourceMap":"482:6300:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}"}},"contracts/Bank.sol":{"Bank":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"symbol","type":"bytes32"}],"name":"depositTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"symbol","type":"bytes32"}],"name":"getTokenBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"symbol","type":"bytes32"}],"name":"getWhitelistedTokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"whitelistedSymbols","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"symbol","type":"bytes32"},{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"whitelistedToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"whitelistedTokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawEther","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"symbol","type":"bytes32"}],"name":"withdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e0b806100606000396000f3fe60806040526004361061008a5760003560e01c80638f97994b116100595780638f97994b146101fd578063aa3d9a1514610226578063d15b223e14610263578063db04a9ab1461028c578063e8812788146102b557610118565b80631f14df691461011d5780633bed33ce1461015a5780634762b9761461018357806388db6ac6146101c057610118565b366101185734600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45746800000000000000000000000000000000000000000000000000000000008152602001908152602001600020600082825461010f9190610c6e565b92505081905550005b600080fd5b34801561012957600080fd5b50610144600480360381019061013f9190610990565b6102f2565b6040516101519190610c42565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c9190610a5a565b610317565b005b34801561018f57600080fd5b506101aa60048036038101906101a59190610a5a565b610454565b6040516101b79190610be7565b60405180910390f35b3480156101cc57600080fd5b506101e760048036038101906101e291906109f5565b610478565b6040516101f49190610c42565b60405180910390f35b34801561020957600080fd5b50610224600480360381019061021f9190610a83565b6104d2565b005b34801561023257600080fd5b5061024d600480360381019061024891906109f5565b610691565b60405161025a9190610b6c565b60405180910390f35b34801561026f57600080fd5b5061028a60048036038101906102859190610a83565b6106c4565b005b34801561029857600080fd5b506102b360048036038101906102ae9190610a1e565b6107f2565b005b3480156102c157600080fd5b506102dc60048036038101906102d791906109f5565b6108ff565b6040516102e99190610b6c565b60405180910390f35b6003602052816000526040600020602052806000526040600020600091509150505481565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f457468000000000000000000000000000000000000000000000000000000000081526020019081526020016000205410156103ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c190610c02565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45746800000000000000000000000000000000000000000000000000000000008152602001908152602001600020600082825461044a9190610cc4565b9250508190555050565b6001818154811061046457600080fd5b906000526020600020016000915090505481565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020549050919050565b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020541015610565576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055c90610c02565b60405180910390fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008282546105c59190610cc4565b925050819055506002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161063a929190610bbe565b602060405180830381600087803b15801561065457600080fd5b505af1158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c91906109cc565b505050565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008282546107249190610c6e565b925050819055506002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161079b93929190610b87565b602060405180830381600087803b1580156107b557600080fd5b505af11580156107c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ed91906109cc565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087790610c22565b60405180910390fd5b6001829080600181540180825580915050600190039060005260206000200160009091909190915055806002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008135905061094b81610d79565b92915050565b60008151905061096081610d90565b92915050565b60008135905061097581610da7565b92915050565b60008135905061098a81610dbe565b92915050565b600080604083850312156109a357600080fd5b60006109b18582860161093c565b92505060206109c285828601610966565b9150509250929050565b6000602082840312156109de57600080fd5b60006109ec84828501610951565b91505092915050565b600060208284031215610a0757600080fd5b6000610a1584828501610966565b91505092915050565b60008060408385031215610a3157600080fd5b6000610a3f85828601610966565b9250506020610a508582860161093c565b9150509250929050565b600060208284031215610a6c57600080fd5b6000610a7a8482850161097b565b91505092915050565b60008060408385031215610a9657600080fd5b6000610aa48582860161097b565b9250506020610ab585828601610966565b9150509250929050565b610ac881610cf8565b82525050565b610ad781610d16565b82525050565b6000610aea601283610c5d565b91507f496e73756666696369656e742066756e647300000000000000000000000000006000830152602082019050919050565b6000610b2a602083610c5d565b91507f4f6e6c79204f776e65722063616e2075736520746869732066756e6374696f6e6000830152602082019050919050565b610b6681610d40565b82525050565b6000602082019050610b816000830184610abf565b92915050565b6000606082019050610b9c6000830186610abf565b610ba96020830185610abf565b610bb66040830184610b5d565b949350505050565b6000604082019050610bd36000830185610abf565b610be06020830184610b5d565b9392505050565b6000602082019050610bfc6000830184610ace565b92915050565b60006020820190508181036000830152610c1b81610add565b9050919050565b60006020820190508181036000830152610c3b81610b1d565b9050919050565b6000602082019050610c576000830184610b5d565b92915050565b600082825260208201905092915050565b6000610c7982610d40565b9150610c8483610d40565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cb957610cb8610d4a565b5b828201905092915050565b6000610ccf82610d40565b9150610cda83610d40565b925082821015610ced57610cec610d4a565b5b828203905092915050565b6000610d0382610d20565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610d8281610cf8565b8114610d8d57600080fd5b50565b610d9981610d0a565b8114610da457600080fd5b50565b610db081610d16565b8114610dbb57600080fd5b50565b610dc781610d40565b8114610dd257600080fd5b5056fea26469706673582212209abeda166e7e38de850fc92579f0a9e6be6fe16a337cdda0fbfa5e098536e7d964736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE0B DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F97994B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8F97994B EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xAA3D9A15 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xD15B223E EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xDB04A9AB EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE8812788 EQ PUSH2 0x2B5 JUMPI PUSH2 0x118 JUMP JUMPDEST DUP1 PUSH4 0x1F14DF69 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x3BED33CE EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x4762B976 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x88DB6AC6 EQ PUSH2 0x1C0 JUMPI PUSH2 0x118 JUMP JUMPDEST CALLDATASIZE PUSH2 0x118 JUMPI CALLVALUE PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH32 0x4574680000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xC6E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x990 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH32 0x4574680000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP1 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH32 0x4574680000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x44A SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5C5 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63A SWAP3 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x668 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0xC6E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x880 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x877 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x94B DUP2 PUSH2 0xD79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x960 DUP2 PUSH2 0xD90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x975 DUP2 PUSH2 0xDA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x98A DUP2 PUSH2 0xDBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9B1 DUP6 DUP3 DUP7 ADD PUSH2 0x93C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9C2 DUP6 DUP3 DUP7 ADD PUSH2 0x966 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9EC DUP5 DUP3 DUP6 ADD PUSH2 0x951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA15 DUP5 DUP3 DUP6 ADD PUSH2 0x966 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA3F DUP6 DUP3 DUP7 ADD PUSH2 0x966 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA50 DUP6 DUP3 DUP7 ADD PUSH2 0x93C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA7A DUP5 DUP3 DUP6 ADD PUSH2 0x97B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAA4 DUP6 DUP3 DUP7 ADD PUSH2 0x97B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAB5 DUP6 DUP3 DUP7 ADD PUSH2 0x966 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC8 DUP2 PUSH2 0xCF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xAD7 DUP2 PUSH2 0xD16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEA PUSH1 0x12 DUP4 PUSH2 0xC5D JUMP JUMPDEST SWAP2 POP PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2A PUSH1 0x20 DUP4 PUSH2 0xC5D JUMP JUMPDEST SWAP2 POP PUSH32 0x4F6E6C79204F776E65722063616E2075736520746869732066756E6374696F6E PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB66 DUP2 PUSH2 0xD40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB81 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xABF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB9C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xABF JUMP JUMPDEST PUSH2 0xBA9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xABF JUMP JUMPDEST PUSH2 0xBB6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB5D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBD3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xABF JUMP JUMPDEST PUSH2 0xBE0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB5D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xACE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC1B DUP2 PUSH2 0xADD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC3B DUP2 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC57 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC79 DUP3 PUSH2 0xD40 JUMP JUMPDEST SWAP2 POP PUSH2 0xC84 DUP4 PUSH2 0xD40 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xCB9 JUMPI PUSH2 0xCB8 PUSH2 0xD4A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCF DUP3 PUSH2 0xD40 JUMP JUMPDEST SWAP2 POP PUSH2 0xCDA DUP4 PUSH2 0xD40 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xCED JUMPI PUSH2 0xCEC PUSH2 0xD4A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD03 DUP3 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD82 DUP2 PUSH2 0xCF8 JUMP JUMPDEST DUP2 EQ PUSH2 0xD8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD99 DUP2 PUSH2 0xD0A JUMP JUMPDEST DUP2 EQ PUSH2 0xDA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDB0 DUP2 PUSH2 0xD16 JUMP JUMPDEST DUP2 EQ PUSH2 0xDBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0xD40 JUMP JUMPDEST DUP2 EQ PUSH2 0xDD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xBE 0xDA AND PUSH15 0x7E38DE850FC92579F0A9E6BE6FE16A CALLER PUSH29 0xDDA0FBFA5E098536E7D964736F6C634300080000330000000000000000 ","sourceMap":"148:1814:2:-:0;;;573:48;;;;;;;;;;603:10;597:5;;:16;;;;;;;;;;;;;;;;;;148:1814;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7862:3","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:3","statements":[{"nodeType":"YulAssignment","src":"69:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:3"},"nodeType":"YulFunctionCall","src":"78:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:3"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:3"},"nodeType":"YulFunctionCall","src":"107:33:3"},"nodeType":"YulExpressionStatement","src":"107:33:3"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:3","type":""}],"src":"7:139:3"},{"body":{"nodeType":"YulBlock","src":"212:77:3","statements":[{"nodeType":"YulAssignment","src":"222:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"237:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"231:5:3"},"nodeType":"YulFunctionCall","src":"231:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"222:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"277:5:3"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"253:23:3"},"nodeType":"YulFunctionCall","src":"253:30:3"},"nodeType":"YulExpressionStatement","src":"253:30:3"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"190:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"198:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"206:5:3","type":""}],"src":"152:137:3"},{"body":{"nodeType":"YulBlock","src":"347:87:3","statements":[{"nodeType":"YulAssignment","src":"357:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"379:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"366:12:3"},"nodeType":"YulFunctionCall","src":"366:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"357:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"422:5:3"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"395:26:3"},"nodeType":"YulFunctionCall","src":"395:33:3"},"nodeType":"YulExpressionStatement","src":"395:33:3"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"325:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"333:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"341:5:3","type":""}],"src":"295:139:3"},{"body":{"nodeType":"YulBlock","src":"492:87:3","statements":[{"nodeType":"YulAssignment","src":"502:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"524:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"511:12:3"},"nodeType":"YulFunctionCall","src":"511:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"502:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"567:5:3"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"540:26:3"},"nodeType":"YulFunctionCall","src":"540:33:3"},"nodeType":"YulExpressionStatement","src":"540:33:3"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"470:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"478:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"486:5:3","type":""}],"src":"440:139:3"},{"body":{"nodeType":"YulBlock","src":"668:324:3","statements":[{"body":{"nodeType":"YulBlock","src":"714:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"723:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"726:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"716:6:3"},"nodeType":"YulFunctionCall","src":"716:12:3"},"nodeType":"YulExpressionStatement","src":"716:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"689:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"698:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"685:3:3"},"nodeType":"YulFunctionCall","src":"685:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"710:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"681:3:3"},"nodeType":"YulFunctionCall","src":"681:32:3"},"nodeType":"YulIf","src":"678:2:3"},{"nodeType":"YulBlock","src":"740:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"755:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"759:6:3","type":""}]},{"nodeType":"YulAssignment","src":"784:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"819:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"830:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"815:3:3"},"nodeType":"YulFunctionCall","src":"815:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"839:7:3"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"794:20:3"},"nodeType":"YulFunctionCall","src":"794:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"784:6:3"}]}]},{"nodeType":"YulBlock","src":"867:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"882:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"896:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"886:6:3","type":""}]},{"nodeType":"YulAssignment","src":"912:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"947:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"958:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"943:3:3"},"nodeType":"YulFunctionCall","src":"943:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"967:7:3"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"922:20:3"},"nodeType":"YulFunctionCall","src":"922:53:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"912:6:3"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"630:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"641:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"653:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"661:6:3","type":""}],"src":"585:407:3"},{"body":{"nodeType":"YulBlock","src":"1072:204:3","statements":[{"body":{"nodeType":"YulBlock","src":"1118:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1127:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1130:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1120:6:3"},"nodeType":"YulFunctionCall","src":"1120:12:3"},"nodeType":"YulExpressionStatement","src":"1120:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1093:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1102:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1089:3:3"},"nodeType":"YulFunctionCall","src":"1089:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1114:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1085:3:3"},"nodeType":"YulFunctionCall","src":"1085:32:3"},"nodeType":"YulIf","src":"1082:2:3"},{"nodeType":"YulBlock","src":"1144:125:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1159:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1173:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1163:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1188:71:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1231:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1242:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1227:3:3"},"nodeType":"YulFunctionCall","src":"1227:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1251:7:3"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"1198:28:3"},"nodeType":"YulFunctionCall","src":"1198:61:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1188:6:3"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1042:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1053:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1065:6:3","type":""}],"src":"998:278:3"},{"body":{"nodeType":"YulBlock","src":"1348:196:3","statements":[{"body":{"nodeType":"YulBlock","src":"1394:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1403:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1406:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1396:6:3"},"nodeType":"YulFunctionCall","src":"1396:12:3"},"nodeType":"YulExpressionStatement","src":"1396:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1369:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1378:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1365:3:3"},"nodeType":"YulFunctionCall","src":"1365:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1390:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1361:3:3"},"nodeType":"YulFunctionCall","src":"1361:32:3"},"nodeType":"YulIf","src":"1358:2:3"},{"nodeType":"YulBlock","src":"1420:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1435:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1449:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1439:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1464:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1499:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1510:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1495:3:3"},"nodeType":"YulFunctionCall","src":"1495:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1519:7:3"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"1474:20:3"},"nodeType":"YulFunctionCall","src":"1474:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1464:6:3"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1318:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1329:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1341:6:3","type":""}],"src":"1282:262:3"},{"body":{"nodeType":"YulBlock","src":"1633:324:3","statements":[{"body":{"nodeType":"YulBlock","src":"1679:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1688:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1691:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1681:6:3"},"nodeType":"YulFunctionCall","src":"1681:12:3"},"nodeType":"YulExpressionStatement","src":"1681:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1654:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1663:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1650:3:3"},"nodeType":"YulFunctionCall","src":"1650:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1675:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1646:3:3"},"nodeType":"YulFunctionCall","src":"1646:32:3"},"nodeType":"YulIf","src":"1643:2:3"},{"nodeType":"YulBlock","src":"1705:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1720:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1724:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1749:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1784:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1795:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1780:3:3"},"nodeType":"YulFunctionCall","src":"1780:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1804:7:3"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"1759:20:3"},"nodeType":"YulFunctionCall","src":"1759:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1749:6:3"}]}]},{"nodeType":"YulBlock","src":"1832:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1847:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1861:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1851:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1877:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1912:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1923:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1908:3:3"},"nodeType":"YulFunctionCall","src":"1908:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1932:7:3"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1887:20:3"},"nodeType":"YulFunctionCall","src":"1887:53:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1877:6:3"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1595:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1606:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1618:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1626:6:3","type":""}],"src":"1550:407:3"},{"body":{"nodeType":"YulBlock","src":"2029:196:3","statements":[{"body":{"nodeType":"YulBlock","src":"2075:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2084:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2077:6:3"},"nodeType":"YulFunctionCall","src":"2077:12:3"},"nodeType":"YulExpressionStatement","src":"2077:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2050:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"2059:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2046:3:3"},"nodeType":"YulFunctionCall","src":"2046:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"2071:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2042:3:3"},"nodeType":"YulFunctionCall","src":"2042:32:3"},"nodeType":"YulIf","src":"2039:2:3"},{"nodeType":"YulBlock","src":"2101:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2116:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2130:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2120:6:3","type":""}]},{"nodeType":"YulAssignment","src":"2145:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2180:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2191:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2176:3:3"},"nodeType":"YulFunctionCall","src":"2176:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2200:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2155:20:3"},"nodeType":"YulFunctionCall","src":"2155:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2145:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1999:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2010:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2022:6:3","type":""}],"src":"1963:262:3"},{"body":{"nodeType":"YulBlock","src":"2314:324:3","statements":[{"body":{"nodeType":"YulBlock","src":"2360:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2369:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2372:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2362:6:3"},"nodeType":"YulFunctionCall","src":"2362:12:3"},"nodeType":"YulExpressionStatement","src":"2362:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2335:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"2344:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2331:3:3"},"nodeType":"YulFunctionCall","src":"2331:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"2356:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2327:3:3"},"nodeType":"YulFunctionCall","src":"2327:32:3"},"nodeType":"YulIf","src":"2324:2:3"},{"nodeType":"YulBlock","src":"2386:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2401:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2415:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2405:6:3","type":""}]},{"nodeType":"YulAssignment","src":"2430:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2465:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2476:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:3"},"nodeType":"YulFunctionCall","src":"2461:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2485:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2440:20:3"},"nodeType":"YulFunctionCall","src":"2440:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2430:6:3"}]}]},{"nodeType":"YulBlock","src":"2513:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2528:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2542:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2532:6:3","type":""}]},{"nodeType":"YulAssignment","src":"2558:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2593:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2604:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:3"},"nodeType":"YulFunctionCall","src":"2589:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2613:7:3"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2568:20:3"},"nodeType":"YulFunctionCall","src":"2568:53:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2558:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2276:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2287:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2299:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2307:6:3","type":""}],"src":"2231:407:3"},{"body":{"nodeType":"YulBlock","src":"2709:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2726:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2749:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2731:17:3"},"nodeType":"YulFunctionCall","src":"2731:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2719:6:3"},"nodeType":"YulFunctionCall","src":"2719:37:3"},"nodeType":"YulExpressionStatement","src":"2719:37:3"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2697:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2704:3:3","type":""}],"src":"2644:118:3"},{"body":{"nodeType":"YulBlock","src":"2833:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2850:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2873:5:3"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2855:17:3"},"nodeType":"YulFunctionCall","src":"2855:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2843:6:3"},"nodeType":"YulFunctionCall","src":"2843:37:3"},"nodeType":"YulExpressionStatement","src":"2843:37:3"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2821:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2828:3:3","type":""}],"src":"2768:118:3"},{"body":{"nodeType":"YulBlock","src":"3038:170:3","statements":[{"nodeType":"YulAssignment","src":"3048:74:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3114:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"3119:2:3","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3055:58:3"},"nodeType":"YulFunctionCall","src":"3055:67:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3048:3:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3143:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"3148:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3139:3:3"},"nodeType":"YulFunctionCall","src":"3139:11:3"},{"kind":"string","nodeType":"YulLiteral","src":"3152:20:3","type":"","value":"Insufficient funds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3132:6:3"},"nodeType":"YulFunctionCall","src":"3132:41:3"},"nodeType":"YulExpressionStatement","src":"3132:41:3"},{"nodeType":"YulAssignment","src":"3183:19:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3194:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"3199:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3190:3:3"},"nodeType":"YulFunctionCall","src":"3190:12:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3183:3:3"}]}]},"name":"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3026:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3034:3:3","type":""}],"src":"2892:316:3"},{"body":{"nodeType":"YulBlock","src":"3360:184:3","statements":[{"nodeType":"YulAssignment","src":"3370:74:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3436:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"3441:2:3","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3377:58:3"},"nodeType":"YulFunctionCall","src":"3377:67:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3370:3:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3465:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"3470:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3461:3:3"},"nodeType":"YulFunctionCall","src":"3461:11:3"},{"kind":"string","nodeType":"YulLiteral","src":"3474:34:3","type":"","value":"Only Owner can use this function"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3454:6:3"},"nodeType":"YulFunctionCall","src":"3454:55:3"},"nodeType":"YulExpressionStatement","src":"3454:55:3"},{"nodeType":"YulAssignment","src":"3519:19:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3530:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"3535:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3526:3:3"},"nodeType":"YulFunctionCall","src":"3526:12:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3519:3:3"}]}]},"name":"abi_encode_t_stringliteral_9fbbecae12ff5e96895b346f0eb02b450c5edf5b9c13f0acc98a82d3dc427ac1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3348:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3356:3:3","type":""}],"src":"3214:330:3"},{"body":{"nodeType":"YulBlock","src":"3615:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3632:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3655:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3637:17:3"},"nodeType":"YulFunctionCall","src":"3637:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3625:6:3"},"nodeType":"YulFunctionCall","src":"3625:37:3"},"nodeType":"YulExpressionStatement","src":"3625:37:3"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3603:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3610:3:3","type":""}],"src":"3550:118:3"},{"body":{"nodeType":"YulBlock","src":"3772:124:3","statements":[{"nodeType":"YulAssignment","src":"3782:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3794:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3805:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3790:3:3"},"nodeType":"YulFunctionCall","src":"3790:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3782:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3862:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3875:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3886:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3871:3:3"},"nodeType":"YulFunctionCall","src":"3871:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3818:43:3"},"nodeType":"YulFunctionCall","src":"3818:71:3"},"nodeType":"YulExpressionStatement","src":"3818:71:3"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3744:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3756:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3767:4:3","type":""}],"src":"3674:222:3"},{"body":{"nodeType":"YulBlock","src":"4056:288:3","statements":[{"nodeType":"YulAssignment","src":"4066:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4078:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4089:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4074:3:3"},"nodeType":"YulFunctionCall","src":"4074:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4066:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4146:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4159:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4170:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4155:3:3"},"nodeType":"YulFunctionCall","src":"4155:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4102:43:3"},"nodeType":"YulFunctionCall","src":"4102:71:3"},"nodeType":"YulExpressionStatement","src":"4102:71:3"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4227:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4240:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4251:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4236:3:3"},"nodeType":"YulFunctionCall","src":"4236:18:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4183:43:3"},"nodeType":"YulFunctionCall","src":"4183:72:3"},"nodeType":"YulExpressionStatement","src":"4183:72:3"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4309:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4322:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4333:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4318:3:3"},"nodeType":"YulFunctionCall","src":"4318:18:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4265:43:3"},"nodeType":"YulFunctionCall","src":"4265:72:3"},"nodeType":"YulExpressionStatement","src":"4265:72:3"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4012:9:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4024:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4032:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4040:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4051:4:3","type":""}],"src":"3902:442:3"},{"body":{"nodeType":"YulBlock","src":"4476:206:3","statements":[{"nodeType":"YulAssignment","src":"4486:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4498:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4509:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4494:3:3"},"nodeType":"YulFunctionCall","src":"4494:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4486:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4566:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4579:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4590:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4575:3:3"},"nodeType":"YulFunctionCall","src":"4575:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4522:43:3"},"nodeType":"YulFunctionCall","src":"4522:71:3"},"nodeType":"YulExpressionStatement","src":"4522:71:3"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4647:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4660:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4671:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:3"},"nodeType":"YulFunctionCall","src":"4656:18:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4603:43:3"},"nodeType":"YulFunctionCall","src":"4603:72:3"},"nodeType":"YulExpressionStatement","src":"4603:72:3"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4440:9:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4452:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4460:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4471:4:3","type":""}],"src":"4350:332:3"},{"body":{"nodeType":"YulBlock","src":"4786:124:3","statements":[{"nodeType":"YulAssignment","src":"4796:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4808:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4819:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4804:3:3"},"nodeType":"YulFunctionCall","src":"4804:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4796:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4876:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4889:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4900:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4885:3:3"},"nodeType":"YulFunctionCall","src":"4885:17:3"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"4832:43:3"},"nodeType":"YulFunctionCall","src":"4832:71:3"},"nodeType":"YulExpressionStatement","src":"4832:71:3"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4758:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4770:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4781:4:3","type":""}],"src":"4688:222:3"},{"body":{"nodeType":"YulBlock","src":"5087:248:3","statements":[{"nodeType":"YulAssignment","src":"5097:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5109:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5120:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5105:3:3"},"nodeType":"YulFunctionCall","src":"5105:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5097:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5144:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5155:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5140:3:3"},"nodeType":"YulFunctionCall","src":"5140:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5163:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"5169:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5159:3:3"},"nodeType":"YulFunctionCall","src":"5159:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5133:6:3"},"nodeType":"YulFunctionCall","src":"5133:47:3"},"nodeType":"YulExpressionStatement","src":"5133:47:3"},{"nodeType":"YulAssignment","src":"5189:139:3","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5323:4:3"}],"functionName":{"name":"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5197:124:3"},"nodeType":"YulFunctionCall","src":"5197:131:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5189:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5067:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5082:4:3","type":""}],"src":"4916:419:3"},{"body":{"nodeType":"YulBlock","src":"5512:248:3","statements":[{"nodeType":"YulAssignment","src":"5522:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5534:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5545:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5530:3:3"},"nodeType":"YulFunctionCall","src":"5530:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5522:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5569:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5580:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5565:3:3"},"nodeType":"YulFunctionCall","src":"5565:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5588:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"5594:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5584:3:3"},"nodeType":"YulFunctionCall","src":"5584:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5558:6:3"},"nodeType":"YulFunctionCall","src":"5558:47:3"},"nodeType":"YulExpressionStatement","src":"5558:47:3"},{"nodeType":"YulAssignment","src":"5614:139:3","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5748:4:3"}],"functionName":{"name":"abi_encode_t_stringliteral_9fbbecae12ff5e96895b346f0eb02b450c5edf5b9c13f0acc98a82d3dc427ac1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5622:124:3"},"nodeType":"YulFunctionCall","src":"5622:131:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5614:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_9fbbecae12ff5e96895b346f0eb02b450c5edf5b9c13f0acc98a82d3dc427ac1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5492:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5507:4:3","type":""}],"src":"5341:419:3"},{"body":{"nodeType":"YulBlock","src":"5864:124:3","statements":[{"nodeType":"YulAssignment","src":"5874:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5886:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5897:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5882:3:3"},"nodeType":"YulFunctionCall","src":"5882:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5874:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5954:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5967:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5978:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5963:3:3"},"nodeType":"YulFunctionCall","src":"5963:17:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5910:43:3"},"nodeType":"YulFunctionCall","src":"5910:71:3"},"nodeType":"YulExpressionStatement","src":"5910:71:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5836:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5848:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5859:4:3","type":""}],"src":"5766:222:3"},{"body":{"nodeType":"YulBlock","src":"6090:73:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6107:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"6112:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6100:6:3"},"nodeType":"YulFunctionCall","src":"6100:19:3"},"nodeType":"YulExpressionStatement","src":"6100:19:3"},{"nodeType":"YulAssignment","src":"6128:29:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6147:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"6152:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6143:3:3"},"nodeType":"YulFunctionCall","src":"6143:14:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6128:11:3"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6062:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"6067:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6078:11:3","type":""}],"src":"5994:169:3"},{"body":{"nodeType":"YulBlock","src":"6213:261:3","statements":[{"nodeType":"YulAssignment","src":"6223:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6246:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6228:17:3"},"nodeType":"YulFunctionCall","src":"6228:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6223:1:3"}]},{"nodeType":"YulAssignment","src":"6257:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6280:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6262:17:3"},"nodeType":"YulFunctionCall","src":"6262:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6257:1:3"}]},{"body":{"nodeType":"YulBlock","src":"6420:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6422:16:3"},"nodeType":"YulFunctionCall","src":"6422:18:3"},"nodeType":"YulExpressionStatement","src":"6422:18:3"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6341:1:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6348:66:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"6416:1:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6344:3:3"},"nodeType":"YulFunctionCall","src":"6344:74:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6338:2:3"},"nodeType":"YulFunctionCall","src":"6338:81:3"},"nodeType":"YulIf","src":"6335:2:3"},{"nodeType":"YulAssignment","src":"6452:16:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6463:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"6466:1:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6459:3:3"},"nodeType":"YulFunctionCall","src":"6459:9:3"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6452:3:3"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6200:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"6203:1:3","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6209:3:3","type":""}],"src":"6169:305:3"},{"body":{"nodeType":"YulBlock","src":"6525:146:3","statements":[{"nodeType":"YulAssignment","src":"6535:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6558:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6540:17:3"},"nodeType":"YulFunctionCall","src":"6540:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6535:1:3"}]},{"nodeType":"YulAssignment","src":"6569:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6592:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6574:17:3"},"nodeType":"YulFunctionCall","src":"6574:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6569:1:3"}]},{"body":{"nodeType":"YulBlock","src":"6616:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6618:16:3"},"nodeType":"YulFunctionCall","src":"6618:18:3"},"nodeType":"YulExpressionStatement","src":"6618:18:3"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6610:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"6613:1:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6607:2:3"},"nodeType":"YulFunctionCall","src":"6607:8:3"},"nodeType":"YulIf","src":"6604:2:3"},{"nodeType":"YulAssignment","src":"6648:17:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6660:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"6663:1:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6656:3:3"},"nodeType":"YulFunctionCall","src":"6656:9:3"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6648:4:3"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6511:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"6514:1:3","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6520:4:3","type":""}],"src":"6480:191:3"},{"body":{"nodeType":"YulBlock","src":"6722:51:3","statements":[{"nodeType":"YulAssignment","src":"6732:35:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6761:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6743:17:3"},"nodeType":"YulFunctionCall","src":"6743:24:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6732:7:3"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6704:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6714:7:3","type":""}],"src":"6677:96:3"},{"body":{"nodeType":"YulBlock","src":"6821:48:3","statements":[{"nodeType":"YulAssignment","src":"6831:32:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6856:5:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6849:6:3"},"nodeType":"YulFunctionCall","src":"6849:13:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6842:6:3"},"nodeType":"YulFunctionCall","src":"6842:21:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6831:7:3"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6803:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6813:7:3","type":""}],"src":"6779:90:3"},{"body":{"nodeType":"YulBlock","src":"6920:32:3","statements":[{"nodeType":"YulAssignment","src":"6930:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"6941:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6930:7:3"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6902:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6912:7:3","type":""}],"src":"6875:77:3"},{"body":{"nodeType":"YulBlock","src":"7003:81:3","statements":[{"nodeType":"YulAssignment","src":"7013:65:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7028:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"7035:42:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7024:3:3"},"nodeType":"YulFunctionCall","src":"7024:54:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7013:7:3"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6985:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6995:7:3","type":""}],"src":"6958:126:3"},{"body":{"nodeType":"YulBlock","src":"7135:32:3","statements":[{"nodeType":"YulAssignment","src":"7145:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"7156:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7145:7:3"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7117:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7127:7:3","type":""}],"src":"7090:77:3"},{"body":{"nodeType":"YulBlock","src":"7201:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7218:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7221:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7211:6:3"},"nodeType":"YulFunctionCall","src":"7211:88:3"},"nodeType":"YulExpressionStatement","src":"7211:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7315:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7318:4:3","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7308:6:3"},"nodeType":"YulFunctionCall","src":"7308:15:3"},"nodeType":"YulExpressionStatement","src":"7308:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7339:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7342:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7332:6:3"},"nodeType":"YulFunctionCall","src":"7332:15:3"},"nodeType":"YulExpressionStatement","src":"7332:15:3"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7173:180:3"},{"body":{"nodeType":"YulBlock","src":"7402:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"7459:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7468:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7471:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7461:6:3"},"nodeType":"YulFunctionCall","src":"7461:12:3"},"nodeType":"YulExpressionStatement","src":"7461:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7425:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7450:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7432:17:3"},"nodeType":"YulFunctionCall","src":"7432:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7422:2:3"},"nodeType":"YulFunctionCall","src":"7422:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7415:6:3"},"nodeType":"YulFunctionCall","src":"7415:43:3"},"nodeType":"YulIf","src":"7412:2:3"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7395:5:3","type":""}],"src":"7359:122:3"},{"body":{"nodeType":"YulBlock","src":"7527:76:3","statements":[{"body":{"nodeType":"YulBlock","src":"7581:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7590:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7593:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7583:6:3"},"nodeType":"YulFunctionCall","src":"7583:12:3"},"nodeType":"YulExpressionStatement","src":"7583:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7550:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7572:5:3"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"7557:14:3"},"nodeType":"YulFunctionCall","src":"7557:21:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7547:2:3"},"nodeType":"YulFunctionCall","src":"7547:32:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7540:6:3"},"nodeType":"YulFunctionCall","src":"7540:40:3"},"nodeType":"YulIf","src":"7537:2:3"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7520:5:3","type":""}],"src":"7487:116:3"},{"body":{"nodeType":"YulBlock","src":"7652:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"7709:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7718:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7721:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7711:6:3"},"nodeType":"YulFunctionCall","src":"7711:12:3"},"nodeType":"YulExpressionStatement","src":"7711:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7675:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7700:5:3"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"7682:17:3"},"nodeType":"YulFunctionCall","src":"7682:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7672:2:3"},"nodeType":"YulFunctionCall","src":"7672:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7665:6:3"},"nodeType":"YulFunctionCall","src":"7665:43:3"},"nodeType":"YulIf","src":"7662:2:3"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7645:5:3","type":""}],"src":"7609:122:3"},{"body":{"nodeType":"YulBlock","src":"7780:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"7837:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7846:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7849:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7839:6:3"},"nodeType":"YulFunctionCall","src":"7839:12:3"},"nodeType":"YulExpressionStatement","src":"7839:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7803:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7828:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7810:17:3"},"nodeType":"YulFunctionCall","src":"7810:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7800:2:3"},"nodeType":"YulFunctionCall","src":"7800:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7793:6:3"},"nodeType":"YulFunctionCall","src":"7793:43:3"},"nodeType":"YulIf","src":"7790:2:3"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7773:5:3","type":""}],"src":"7737:122:3"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n\n        mstore(add(pos, 0), \"Insufficient funds\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9fbbecae12ff5e96895b346f0eb02b450c5edf5b9c13f0acc98a82d3dc427ac1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Only Owner can use this function\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9fbbecae12ff5e96895b346f0eb02b450c5edf5b9c13f0acc98a82d3dc427ac1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9fbbecae12ff5e96895b346f0eb02b450c5edf5b9c13f0acc98a82d3dc427ac1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061008a5760003560e01c80638f97994b116100595780638f97994b146101fd578063aa3d9a1514610226578063d15b223e14610263578063db04a9ab1461028c578063e8812788146102b557610118565b80631f14df691461011d5780633bed33ce1461015a5780634762b9761461018357806388db6ac6146101c057610118565b366101185734600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45746800000000000000000000000000000000000000000000000000000000008152602001908152602001600020600082825461010f9190610c6e565b92505081905550005b600080fd5b34801561012957600080fd5b50610144600480360381019061013f9190610990565b6102f2565b6040516101519190610c42565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c9190610a5a565b610317565b005b34801561018f57600080fd5b506101aa60048036038101906101a59190610a5a565b610454565b6040516101b79190610be7565b60405180910390f35b3480156101cc57600080fd5b506101e760048036038101906101e291906109f5565b610478565b6040516101f49190610c42565b60405180910390f35b34801561020957600080fd5b50610224600480360381019061021f9190610a83565b6104d2565b005b34801561023257600080fd5b5061024d600480360381019061024891906109f5565b610691565b60405161025a9190610b6c565b60405180910390f35b34801561026f57600080fd5b5061028a60048036038101906102859190610a83565b6106c4565b005b34801561029857600080fd5b506102b360048036038101906102ae9190610a1e565b6107f2565b005b3480156102c157600080fd5b506102dc60048036038101906102d791906109f5565b6108ff565b6040516102e99190610b6c565b60405180910390f35b6003602052816000526040600020602052806000526040600020600091509150505481565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f457468000000000000000000000000000000000000000000000000000000000081526020019081526020016000205410156103ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c190610c02565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45746800000000000000000000000000000000000000000000000000000000008152602001908152602001600020600082825461044a9190610cc4565b9250508190555050565b6001818154811061046457600080fd5b906000526020600020016000915090505481565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020549050919050565b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020541015610565576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055c90610c02565b60405180910390fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008282546105c59190610cc4565b925050819055506002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161063a929190610bbe565b602060405180830381600087803b15801561065457600080fd5b505af1158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c91906109cc565b505050565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008282546107249190610c6e565b925050819055506002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161079b93929190610b87565b602060405180830381600087803b1580156107b557600080fd5b505af11580156107c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ed91906109cc565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087790610c22565b60405180910390fd5b6001829080600181540180825580915050600190039060005260206000200160009091909190915055806002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008135905061094b81610d79565b92915050565b60008151905061096081610d90565b92915050565b60008135905061097581610da7565b92915050565b60008135905061098a81610dbe565b92915050565b600080604083850312156109a357600080fd5b60006109b18582860161093c565b92505060206109c285828601610966565b9150509250929050565b6000602082840312156109de57600080fd5b60006109ec84828501610951565b91505092915050565b600060208284031215610a0757600080fd5b6000610a1584828501610966565b91505092915050565b60008060408385031215610a3157600080fd5b6000610a3f85828601610966565b9250506020610a508582860161093c565b9150509250929050565b600060208284031215610a6c57600080fd5b6000610a7a8482850161097b565b91505092915050565b60008060408385031215610a9657600080fd5b6000610aa48582860161097b565b9250506020610ab585828601610966565b9150509250929050565b610ac881610cf8565b82525050565b610ad781610d16565b82525050565b6000610aea601283610c5d565b91507f496e73756666696369656e742066756e647300000000000000000000000000006000830152602082019050919050565b6000610b2a602083610c5d565b91507f4f6e6c79204f776e65722063616e2075736520746869732066756e6374696f6e6000830152602082019050919050565b610b6681610d40565b82525050565b6000602082019050610b816000830184610abf565b92915050565b6000606082019050610b9c6000830186610abf565b610ba96020830185610abf565b610bb66040830184610b5d565b949350505050565b6000604082019050610bd36000830185610abf565b610be06020830184610b5d565b9392505050565b6000602082019050610bfc6000830184610ace565b92915050565b60006020820190508181036000830152610c1b81610add565b9050919050565b60006020820190508181036000830152610c3b81610b1d565b9050919050565b6000602082019050610c576000830184610b5d565b92915050565b600082825260208201905092915050565b6000610c7982610d40565b9150610c8483610d40565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cb957610cb8610d4a565b5b828201905092915050565b6000610ccf82610d40565b9150610cda83610d40565b925082821015610ced57610cec610d4a565b5b828203905092915050565b6000610d0382610d20565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610d8281610cf8565b8114610d8d57600080fd5b50565b610d9981610d0a565b8114610da457600080fd5b50565b610db081610d16565b8114610dbb57600080fd5b50565b610dc781610d40565b8114610dd257600080fd5b5056fea26469706673582212209abeda166e7e38de850fc92579f0a9e6be6fe16a337cdda0fbfa5e098536e7d964736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F97994B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8F97994B EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xAA3D9A15 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xD15B223E EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xDB04A9AB EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE8812788 EQ PUSH2 0x2B5 JUMPI PUSH2 0x118 JUMP JUMPDEST DUP1 PUSH4 0x1F14DF69 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x3BED33CE EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x4762B976 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x88DB6AC6 EQ PUSH2 0x1C0 JUMPI PUSH2 0x118 JUMP JUMPDEST CALLDATASIZE PUSH2 0x118 JUMPI CALLVALUE PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH32 0x4574680000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xC6E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x990 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH32 0x4574680000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP1 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH32 0x4574680000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x44A SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5C5 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63A SWAP3 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x668 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0xC6E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x880 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x877 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x94B DUP2 PUSH2 0xD79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x960 DUP2 PUSH2 0xD90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x975 DUP2 PUSH2 0xDA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x98A DUP2 PUSH2 0xDBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9B1 DUP6 DUP3 DUP7 ADD PUSH2 0x93C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9C2 DUP6 DUP3 DUP7 ADD PUSH2 0x966 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9EC DUP5 DUP3 DUP6 ADD PUSH2 0x951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA15 DUP5 DUP3 DUP6 ADD PUSH2 0x966 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA3F DUP6 DUP3 DUP7 ADD PUSH2 0x966 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA50 DUP6 DUP3 DUP7 ADD PUSH2 0x93C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA7A DUP5 DUP3 DUP6 ADD PUSH2 0x97B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAA4 DUP6 DUP3 DUP7 ADD PUSH2 0x97B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAB5 DUP6 DUP3 DUP7 ADD PUSH2 0x966 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC8 DUP2 PUSH2 0xCF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xAD7 DUP2 PUSH2 0xD16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEA PUSH1 0x12 DUP4 PUSH2 0xC5D JUMP JUMPDEST SWAP2 POP PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2A PUSH1 0x20 DUP4 PUSH2 0xC5D JUMP JUMPDEST SWAP2 POP PUSH32 0x4F6E6C79204F776E65722063616E2075736520746869732066756E6374696F6E PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB66 DUP2 PUSH2 0xD40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB81 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xABF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB9C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xABF JUMP JUMPDEST PUSH2 0xBA9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xABF JUMP JUMPDEST PUSH2 0xBB6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB5D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBD3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xABF JUMP JUMPDEST PUSH2 0xBE0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB5D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xACE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC1B DUP2 PUSH2 0xADD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC3B DUP2 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC57 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC79 DUP3 PUSH2 0xD40 JUMP JUMPDEST SWAP2 POP PUSH2 0xC84 DUP4 PUSH2 0xD40 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xCB9 JUMPI PUSH2 0xCB8 PUSH2 0xD4A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCF DUP3 PUSH2 0xD40 JUMP JUMPDEST SWAP2 POP PUSH2 0xCDA DUP4 PUSH2 0xD40 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xCED JUMPI PUSH2 0xCEC PUSH2 0xD4A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD03 DUP3 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD82 DUP2 PUSH2 0xCF8 JUMP JUMPDEST DUP2 EQ PUSH2 0xD8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD99 DUP2 PUSH2 0xD0A JUMP JUMPDEST DUP2 EQ PUSH2 0xDA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDB0 DUP2 PUSH2 0xD16 JUMP JUMPDEST DUP2 EQ PUSH2 0xDBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0xD40 JUMP JUMPDEST DUP2 EQ PUSH2 0xDD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xBE 0xDA AND PUSH15 0x7E38DE850FC92579F0A9E6BE6FE16A CALLER PUSH29 0xDDA0FBFA5E098536E7D964736F6C634300080000330000000000000000 ","sourceMap":"148:1814:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1096:9;1065:8;:20;1074:10;1065:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;148:1814;;;;;384:62;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1137:238;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;188:35;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1840:117;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1585:251;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;315:52;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1381:200;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;633:249;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;887:133;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;384:62;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1137:238::-;1232:6;1201:8;:20;1210:10;1201:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;:37;;1193:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1303:6;1272:8;:20;1281:10;1272:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;1137:238;:::o;188:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1840:117::-;1903:7;1925:8;:20;1934:10;1925:20;;;;;;;;;;;;;;;:28;1946:6;1925:28;;;;;;;;;;;;1918:35;;1840:117;;;:::o;1585:251::-;1694:6;1662:8;:20;1671:10;1662:20;;;;;;;;;;;;;;;:28;1683:6;1662:28;;;;;;;;;;;;:38;;1654:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1760:6;1728:8;:20;1737:10;1728:20;;;;;;;;;;;;;;;:28;1749:6;1728:28;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;1777:17;:25;1795:6;1777:25;;;;;;;;;;;;;;;;;;;;;1770:42;;;1814:10;1825:6;1770:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1585:251;;:::o;315:52::-;;;;;;;;;;;;;;;;;;;;;;:::o;1381:200::-;1483:6;1451:8;:20;1460:10;1451:20;;;;;;;;;;;;;;;:28;1472:6;1451:28;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;1503:17;:25;1521:6;1503:25;;;;;;;;;;;;;;;;;;;;;1496:46;;;1543:10;1563:4;1570:6;1496:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1381:200;;:::o;633:249::-;738:5;;;;;;;;;;724:19;;:10;:19;;;716:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;793:18;817:6;793:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:12;835:17;:25;853:6;835:25;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;633:249;;:::o;887:133::-;961:7;987:17;:25;1005:6;987:25;;;;;;;;;;;;;;;;;;;;;980:32;;887:133;;;:::o;7:139:3:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:139::-;;524:6;511:20;502:29;;540:33;567:5;540:33;:::i;:::-;492:87;;;;:::o;585:407::-;;;710:2;698:9;689:7;685:23;681:32;678:2;;;726:1;723;716:12;678:2;769:1;794:53;839:7;830:6;819:9;815:22;794:53;:::i;:::-;784:63;;740:117;896:2;922:53;967:7;958:6;947:9;943:22;922:53;:::i;:::-;912:63;;867:118;668:324;;;;;:::o;998:278::-;;1114:2;1102:9;1093:7;1089:23;1085:32;1082:2;;;1130:1;1127;1120:12;1082:2;1173:1;1198:61;1251:7;1242:6;1231:9;1227:22;1198:61;:::i;:::-;1188:71;;1144:125;1072:204;;;;:::o;1282:262::-;;1390:2;1378:9;1369:7;1365:23;1361:32;1358:2;;;1406:1;1403;1396:12;1358:2;1449:1;1474:53;1519:7;1510:6;1499:9;1495:22;1474:53;:::i;:::-;1464:63;;1420:117;1348:196;;;;:::o;1550:407::-;;;1675:2;1663:9;1654:7;1650:23;1646:32;1643:2;;;1691:1;1688;1681:12;1643:2;1734:1;1759:53;1804:7;1795:6;1784:9;1780:22;1759:53;:::i;:::-;1749:63;;1705:117;1861:2;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1832:118;1633:324;;;;;:::o;1963:262::-;;2071:2;2059:9;2050:7;2046:23;2042:32;2039:2;;;2087:1;2084;2077:12;2039:2;2130:1;2155:53;2200:7;2191:6;2180:9;2176:22;2155:53;:::i;:::-;2145:63;;2101:117;2029:196;;;;:::o;2231:407::-;;;2356:2;2344:9;2335:7;2331:23;2327:32;2324:2;;;2372:1;2369;2362:12;2324:2;2415:1;2440:53;2485:7;2476:6;2465:9;2461:22;2440:53;:::i;:::-;2430:63;;2386:117;2542:2;2568:53;2613:7;2604:6;2593:9;2589:22;2568:53;:::i;:::-;2558:63;;2513:118;2314:324;;;;;:::o;2644:118::-;2731:24;2749:5;2731:24;:::i;:::-;2726:3;2719:37;2709:53;;:::o;2768:118::-;2855:24;2873:5;2855:24;:::i;:::-;2850:3;2843:37;2833:53;;:::o;2892:316::-;;3055:67;3119:2;3114:3;3055:67;:::i;:::-;3048:74;;3152:20;3148:1;3143:3;3139:11;3132:41;3199:2;3194:3;3190:12;3183:19;;3038:170;;;:::o;3214:330::-;;3377:67;3441:2;3436:3;3377:67;:::i;:::-;3370:74;;3474:34;3470:1;3465:3;3461:11;3454:55;3535:2;3530:3;3526:12;3519:19;;3360:184;;;:::o;3550:118::-;3637:24;3655:5;3637:24;:::i;:::-;3632:3;3625:37;3615:53;;:::o;3674:222::-;;3805:2;3794:9;3790:18;3782:26;;3818:71;3886:1;3875:9;3871:17;3862:6;3818:71;:::i;:::-;3772:124;;;;:::o;3902:442::-;;4089:2;4078:9;4074:18;4066:26;;4102:71;4170:1;4159:9;4155:17;4146:6;4102:71;:::i;:::-;4183:72;4251:2;4240:9;4236:18;4227:6;4183:72;:::i;:::-;4265;4333:2;4322:9;4318:18;4309:6;4265:72;:::i;:::-;4056:288;;;;;;:::o;4350:332::-;;4509:2;4498:9;4494:18;4486:26;;4522:71;4590:1;4579:9;4575:17;4566:6;4522:71;:::i;:::-;4603:72;4671:2;4660:9;4656:18;4647:6;4603:72;:::i;:::-;4476:206;;;;;:::o;4688:222::-;;4819:2;4808:9;4804:18;4796:26;;4832:71;4900:1;4889:9;4885:17;4876:6;4832:71;:::i;:::-;4786:124;;;;:::o;4916:419::-;;5120:2;5109:9;5105:18;5097:26;;5169:9;5163:4;5159:20;5155:1;5144:9;5140:17;5133:47;5197:131;5323:4;5197:131;:::i;:::-;5189:139;;5087:248;;;:::o;5341:419::-;;5545:2;5534:9;5530:18;5522:26;;5594:9;5588:4;5584:20;5580:1;5569:9;5565:17;5558:47;5622:131;5748:4;5622:131;:::i;:::-;5614:139;;5512:248;;;:::o;5766:222::-;;5897:2;5886:9;5882:18;5874:26;;5910:71;5978:1;5967:9;5963:17;5954:6;5910:71;:::i;:::-;5864:124;;;;:::o;5994:169::-;;6112:6;6107:3;6100:19;6152:4;6147:3;6143:14;6128:29;;6090:73;;;;:::o;6169:305::-;;6228:20;6246:1;6228:20;:::i;:::-;6223:25;;6262:20;6280:1;6262:20;:::i;:::-;6257:25;;6416:1;6348:66;6344:74;6341:1;6338:81;6335:2;;;6422:18;;:::i;:::-;6335:2;6466:1;6463;6459:9;6452:16;;6213:261;;;;:::o;6480:191::-;;6540:20;6558:1;6540:20;:::i;:::-;6535:25;;6574:20;6592:1;6574:20;:::i;:::-;6569:25;;6613:1;6610;6607:8;6604:2;;;6618:18;;:::i;:::-;6604:2;6663:1;6660;6656:9;6648:17;;6525:146;;;;:::o;6677:96::-;;6743:24;6761:5;6743:24;:::i;:::-;6732:35;;6722:51;;;:::o;6779:90::-;;6856:5;6849:13;6842:21;6831:32;;6821:48;;;:::o;6875:77::-;;6941:5;6930:16;;6920:32;;;:::o;6958:126::-;;7035:42;7028:5;7024:54;7013:65;;7003:81;;;:::o;7090:77::-;;7156:5;7145:16;;7135:32;;;:::o;7173:180::-;7221:77;7218:1;7211:88;7318:4;7315:1;7308:15;7342:4;7339:1;7332:15;7359:122;7432:24;7450:5;7432:24;:::i;:::-;7425:5;7422:35;7412:2;;7471:1;7468;7461:12;7412:2;7402:79;:::o;7487:116::-;7557:21;7572:5;7557:21;:::i;:::-;7550:5;7547:32;7537:2;;7593:1;7590;7583:12;7537:2;7527:76;:::o;7609:122::-;7682:24;7700:5;7682:24;:::i;:::-;7675:5;7672:35;7662:2;;7721:1;7718;7711:12;7662:2;7652:79;:::o;7737:122::-;7810:24;7828:5;7810:24;:::i;:::-;7803:5;7800:35;7790:2;;7849:1;7846;7839:12;7790:2;7780:79;:::o"},"methodIdentifiers":{"balances(address,bytes32)":"1f14df69","depositTokens(uint256,bytes32)":"d15b223e","getTokenBalance(bytes32)":"88db6ac6","getWhitelistedTokenAddress(bytes32)":"e8812788","whitelistedSymbols(uint256)":"4762b976","whitelistedToken(bytes32,address)":"db04a9ab","whitelistedTokens(bytes32)":"aa3d9a15","withdrawEther(uint256)":"3bed33ce","withdrawTokens(uint256,bytes32)":"8f97994b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"}],\"name\":\"getWhitelistedTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whitelistedSymbols\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"whitelistedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"whitelistedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Bank.sol\":\"Bank\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/Bank.sol\":{\"keccak256\":\"0xd4207c886087b3e79b36086e4afbd7adefe4dc233e8557d9706bb1c00cf6c770\",\"urls\":[\"bzz-raw://13ef4ba85131eb0df9d3a5a78224d2f277234ac8f6f722b88c8e86c1b9a643ae\",\"dweb:/ipfs/Qmb2zM1Q6CqQSZkgKL1vr3xKHizyCjY56QfDYrDbwaNMcB\"]}},\"version\":1}"}}}}}